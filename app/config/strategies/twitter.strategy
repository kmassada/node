var passport = require('passport');
var TwitterStrategy = require('passport-twitter').Strategy;
var User             = require('../../models/user');

// =========================================================================
// TWITTER =================================================================
// =========================================================================


var passportFacebookFunction = function passportFacebookFunction(app) {
  passport.use(new TwitterStrategy({
    consumerKey: process.env.TWITTERAUTH_CONSUMERKEY,
    consumerSecret: process.env.TWITTERAUTH_CONSUMERSECRET,
    callbackURL: process.env.TWITTERAUTH_CALLBACKURL,
  },

    // Facebook will send back the token and profile
    function(token, tokenSecret, profile, done) {
      var findOrCreateUser = function() {

        var twitter = {};
        console.log(profile);
        twitter.id          = profile.id;
        twitter.token       = token;
        twitter.username    = profile.username;
        twitter.displayName        = profile.displayName;
        twitter.profilePicture     = profile.profileImageUrl;

        // If can't find twitter name, find if their user exists
        User.findOne({fullName: twitter.displayName}, function(err, userExist) {
          if (userExist) {
            userExist.twitter = twitter;
            // Save our user to the database
            console.log(userExist);
            console.log('found');
            userExist.save(function(err) {
              if (err) {
                throw err;
              }
            });
            return done(null, userExist);
          }
        });

        User.findOne({ 'twitter.id': profile.id }, function(err, user) {
          // If there is an error, stop everything and return that
          // ie an error connecting to the database
          if (err) {
            return done(err);
          }

          // If the user is found then log them in
          if (user) {
            return done(null, user); // User found, return that user
          }

          // If there is no user found with that twitter name, create them
          var thisUser = new User();
          thisUser.fullName = twitter.displayName;
          thisUser.twitter = twitter;

          thisUser.save(function(err) {
            if (err) {
              throw err;
            }
          });

          // If successful, return the new user
          return done(null, thisUser);
        });
      };
      // Delay the execution of findOrCreateUser and execute
      // the method in the next tick of the event loop
      process.nextTick(findOrCreateUser);
    }));
};

module.exports = passportFacebookFunction;
