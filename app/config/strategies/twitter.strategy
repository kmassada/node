var passport = require('passport');
var TwitterStrategy = require('passport-twitter').Strategy;
var User             = require('../../models/user');

// =========================================================================
// TWITTER =================================================================
// =========================================================================


var passportFacebookFunction = function passportFacebookFunction(app) {
  passport.use(new TwitterStrategy({
    consumerKey: process.env.TWITTERAUTH_CONSUMERKEY,
    consumerSecret: process.env.TWITTERAUTH_CONSUMERSECRET,
    callbackURL: process.env.TWITTERAUTH_CALLBACKURL,
  },

    // Facebook will send back the token and profile
    function(token, refreshToken, profile, done) {
      var findOrCreateUser = function() {
        User.findOne({ 'twitter.id': profile.id }, function(err, user) {
          // If there is an error, stop everything and return that
          // ie an error connecting to the database
          if (err) {
            return done(err);
          }

          // If the user is found then log them in
          if (user) {
            return done(null, user); // User found, return that user
          }

          // If there is no user found with that facebook id, create them
          var thisUser = new User();
          var twitterName = profile.displayName;

          User.findOne({name:  twitterName}, function(err, user) {
            if (user) {
              thisUser = user;
            }

            // Set all of the twitter information in our user model
            console.log(profile);
            // Set all of the user data that we need
            thisUser.twitter.id          = profile.id;
            thisUser.twitter.token       = token;
            thisUser.twitter.username    = profile.username;
            thisUser.twitter.displayName = profile.displayName;

            // Save our user to the database
            thisUser.save(function(err) {
              if (err) {
                throw err;
              }
            });

            // If successful, return the new user
            return done(null, thisUser);
          });
        });
      };
      // Delay the execution of findOrCreateUser and execute
      // the method in the next tick of the event loop
      process.nextTick(findOrCreateUser);
    }));
};

module.exports = passportFacebookFunction;
